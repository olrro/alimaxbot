<?php

use TuriBot\Client;

require_once __DIR__ . "/vendor/autoload.php";

if ( !isset( $_GET["api"] ) ) {
  exit();
}

Predis\Autoloader::register();

$redis = new Predis\Client( $_ENV['REDIS_URL'] );

if ( !$storage = @json_decode( $redis->get( 'storage' ), 1 ) ){
  $storage = [ 'section' => '' ];
}

$client = new Client( $_GET["api"] );
$update = json_decode( json_encode( $client->getUpdate() ), 1 );

if ( isset( $update['message'] ) ) {

    $chat_id = $client->easy->chat_id;
    $message_id = $client->easy->message_id;
    $text = $client->easy->text;

    switch ( 1 ) {

      case ( $storage['section'] == 'create' AND !isset( $storage['ready'] ) ):

        if ( filter_var( $text, FILTER_VALIDATE_URL ) ) {

          $storage['ready']['url'] = $text;

          $client->sendMessage(
            $chat_id,
            '–°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'
          );

          $client->sendMessage(
            $chat_id,
            '–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å - –≤–≤–µ–¥–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä–∞ –Ω–∞ Aliexpress –∏ —Ç–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 32914249002 –ù–æ–≤–æ–µ –∫–ª–∞—Å—Å–Ω–æ–µ –∑–∞—Ä—è–¥–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ)'
          );

        }
        else {

          $client->sendMessage(
            $chat_id,
            '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä (—Å –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω –ø—Ä–æ—Ü–µ–Ω—Ç)'
          );

        }

      break;

      case ( isset( $storage['ready'] ) AND $text != '/post' AND $text != '/stop' ):

        if ( preg_match( '/^([0-9]{5,20}) (.{1,500})$/sU', $text, $description ) ) {

          $item = [];

          $item['id'] = $description['1'];
          $item['description'] = $description['2'];

          $item['html'] = @file_get_contents( 'https://aliexpress.ru/item/' . $item['id'] . '.html' );

          $conditions = [
            '<meta property="og:image" content="(.*)"\/>' => 'image',
            '"totalValidNum":(.*),' => 'reviews',
            '"formatTradeCount":"(.*)",' => 'orders',
            '"averageStar":"(.*)",' => 'rating',
            '"actSkuMultiCurrencyDisplayPrice":"(.*)",' => 'price',
            '"discount":(.*),' => 'discount',
          ];


          foreach ( $conditions as $regex => $name ) {

            preg_match( "/{$regex}/iU", $item['html'], $match );
            if ( !empty( $match[1] ) ) $item[$name] = ( $name == 'price' ) ? intval( $match[1] ) : $match[1];

          }

          $text = [];

          $text[] = "[‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã]({$item['image']}){$item['description']}" . PHP_EOL;
          $text[] = "–¶–µ–Ω–∞ - [{$item['price']} ‚ÇΩ]({$storage['ready']['url']})";

          if ( isset( $item['discount'] ) )
          $text[] = "–°–∫–∏–¥–∫–∞ - –∏–º–µ–µ—Ç—Å—è ([-{$item['discount']}%]({$storage['ready']['url']}))";

          $text[] = "–†–µ–π—Ç–∏–Ω–≥ - [{$item['rating']}]({$storage['ready']['url']}) –æ—Ü–µ–Ω–∫–∞ / [{$item['orders']}]({$storage['ready']['url']}) –∑–∞–∫–∞–∑—ã";
          $text[] = "–û—Ç–∑—ã–≤–æ–≤ - [{$item['reviews']}]({$storage['ready']['url']})";

          $storage['ready']['text'] = implode( PHP_EOL, $text );

          $client->sendMessage( $chat_id, $storage['ready']['text'], 'markdown' );
          $client->sendMessage( $chat_id, '–¢–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –ø–æ—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –∫–∞–Ω–∞–ª' );
          $client->sendMessage( $chat_id, '–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /post, –¥–ª—è –æ—Ç–º–µ–Ω—ã - /stop' );

        }
        else {

          $client->sendMessage(
            $chat_id,
            '–í–≤–µ–¥–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä–∞ –Ω–∞ Aliexpress –∏ —Ç–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 32914249002 –ù–æ–≤–æ–µ –∫–ª–∞—Å—Å–Ω–æ–µ –∑–∞—Ä—è–¥–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ)'
          );

        }

      break;

      case ( $text === '/create' ):

        $client->sendMessage(
          $chat_id,
          '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä (—Å –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω –ø—Ä–æ—Ü–µ–Ω—Ç)'
        );

        $storage['section'] = 'create';

      break;

      case ( $text === '/post' ):

        if ( isset( $storage['ready']['text'] ) ) {

          $client->sendMessage( $chat_id, '–í–∞—à –ø–æ—Å—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!' );

          $client->sendMessage(
            '-1001432760770', $storage['ready']['text'], 'markdown',
            null, null, null, null, null,
            [
              'inline_keyboard' =>
              [
                [ [ "text" => "üëç", "callback_data" => "finger" ], [ "text" => "üòú", "callback_data" => "emoji" ] ],
                [ [ "text" => "–ö—É–ø–∏—Ç—å üß®", "url" => $storage['ready']['url'], ] ]
              ]
            ]
          );

          unset( $storage['section'] );
          unset( $storage['ready'] );

        }
        else {

          $client->sendMessage(
            $chat_id,
            '–í—ã –µ—â–µ –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ —à–∞–≥–∏'
          );

        }

      break;

      case ( $text === '/stop' ):

        $client->sendMessage(
          $chat_id,
          '–ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /create'
        );

        unset( $storage['section'] );
        unset( $storage['ready'] );

      break;

      case ( $text === '/start' ):

        $client->sendMessage(
          $chat_id,
          '–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç –Ω–∞ –∫–∞–Ω–∞–ª–µ! –ï—Å–ª–∏ —Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, —Ç–æ –º–æ–∂–µ—à—å –≤–æ–ø—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ–π'
        );

      break;

      default:

        $client->sendMessage(
          $chat_id,
          '–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥'
        );

      break;

    }

}

if ( isset( $update['callback_query'] ) ) {

    $update = $update['callback_query'];
    $message = $update['message'];

    $id = $update['id'];
    $chat_id = $message['chat']['id'];
    $message_id = $message['message_id'];
    $buttons = $message['reply_markup']['inline_keyboard'];

    if ( $update['data'] == "finger" ) {

      $buttons[0][0]['text'] = 'üëç ' . ( intval( ltrim( $buttons[0][0]['text'], 'üëç' ) ) + 1 );

    } elseif ( $update['data'] == "emoji" ) {

      $buttons[0][1]['text'] = 'üòú ' . ( intval( ltrim( $buttons[0][1]['text'], 'üòú' ) ) + 1 );

    }

    $client->answerCallbackQuery( $id, "–†–µ–π—Ç–∏–Ω–≥ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!" );

    $client->editMessageText(
      $chat_id, $message_id, null, $message['text'],
      null, $update['message']['entities'], null,
      [ 'inline_keyboard' => $buttons ]
    );

}

if ( $storage = @json_encode( $storage ) ) {
  $redis->set( 'storage', $storage );
}
